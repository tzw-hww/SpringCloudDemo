#要注册到注册中心地址
eureka.client.service-url.defaultZone=http://tzw:123@localhost:7001/eureka/
server.port=82
spring.application.name=consumer
eureka.instance.ip-address=false

#=================actuator=====================
#actuator开启所有端点
management.endpoints.web.exposure.include=*
#actuator开启shutdown端点
management.endpoint.shutdown.enabled=true
# 开启### 开启手动控制
#在client端配置：将自己真正的健康状态传播到server。
eureka.client.healthcheck.enabled=true

#==================Ribbon====================
#通过配置修改Ribbon负载均衡的算法
#provider.ribbon.NFLoadBalancerRuleClassName=com.netflix.loadbalancer.RandomRule


#===================feign+Ribbon===================
#配置日志
#feign.client.config.provider.logger-level=full

#上面的logger-level只对下面的 debug级别日志做出响应。
# feign日志已什么级别监控哪个接口
logging.level.com.example.consumer.*=debug

#连接超时时间(ms)
ribbon.ConnectTimeout=1000
#业务逻辑超时时间(ms)
ribbon.ReadTimeout=2000

#同一台实例最大重试次数,不包括首次调用
ribbon.MaxAutoRetries=2
#重试负载均衡其他的实例最大重试次数,不包括首次调用
ribbon.MaxAutoRetriesNextServer=2
#是否所有操作都重试
ribbon.OkToRetryOnAllOperations=false

#=================feign+hystrix================
#Feign开启hystrix
feign.hystrix.enabled=true


#隔离配置
#隔离策略，默认是Thread, 可选Thread｜
#thread 通过线程数量来限制并发请求数，可以提供额外的保护，但有一定的延迟。一般用于网络调用
#semaphore 通过semaphore count来限制并发请求数，适用于无网络的高并发请求
#hystrix的隔离策略，默认是thread，如果要修改成信号量隔离，配置为SEMAPHORE
hystrix.command.default.execution.isolation.strategy=SEMAPHORE
# 命令执行超时时间，默认1000ms
hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds=1000
#执行是否启用超时，默认启用true
hystrix.command.default.execution.timeout.enabled=true
#发生超时是是否中断，默认true
hystrix.command.default.execution.isolation.thread.interruptOnTimeout=true
#最大并发请求数，默认10，该参数当使用ExecutionIsolationStrategy.SEMAPHORE策略时才有效。如果达到最大并发请求数，请求会被拒绝。
# 理论上选择semaphore size的原则和选择thread size一致，但选用semaphore时每次执行的单元要比较小且执行速度快（ms级别），否则的话应该用thread。
#semaphore应该占整个容器（tomcat）的线程池的一小部分。
hystrix.command.default.execution.isolation.semaphore.maxConcurrentRequests=10 



#=================链路追踪===================
#zipkin
spring.zipkin.base-url=http://localhost:9411/
#采样比例1
spring.sleuth.sampler.rate=1



#=================spring Cloud Admin============
#开放端口
management.endpoint.health.show-details=always
#上报信息给spring cloud admin
spring.boot.admin.client.url=http://localhost:8080